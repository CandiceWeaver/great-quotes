{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","CommentItem","item","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.607f79f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__Is2oX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1m5vb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1RJ41\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1J202\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1iguy\",\"loading\":\"NewCommentForm_loading__1ze7n\",\"control\":\"NewCommentForm_control__37tbC\",\"actions\":\"NewCommentForm_actions__18u12\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../ui/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = props => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [error, onAddedComment, status]);\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({\n      commentData: {\n        text: enteredText,\n      },\n      quoteId: props.quoteId,\n    });\n  };\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}